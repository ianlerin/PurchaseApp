
@page "/login"
@using System.ComponentModel.DataAnnotations
@using PurchaseBlazorApp2.Components.Global
@using PurchaseBlazorApp2.Components.Helper
@using PurchaseBlazorApp2.Components.Repository
@using PurchaseBlazorApp2.ViewModel
@inject GlobalVar GlobalVar
@inject IJSRuntime JS
@inject LoginCookieService LoginCookieService
@rendermode InteractiveServer


<h3>MainLogin</h3>
<EditForm Model="loginModel" OnValidSubmit="loginModel.HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-danger mt-3">@errorMessage</div>
    }
</EditForm>


@code {

    private string? errorMessage;
    protected override void OnInitialized()
    {
        loginModel = new LoginModel(GlobalVar, JS);
        loginModel.OnLoginSuccess += HandleLoginSuccess;
    }
    private void HandleLoginSuccess()
    {
        InvokeAsync(StateHasChanged); 
    }

    

    public void Dispose()
    {
        loginModel.OnLoginSuccess -= HandleLoginSuccess;
    }
    private LoginModel? loginModel;
    
}