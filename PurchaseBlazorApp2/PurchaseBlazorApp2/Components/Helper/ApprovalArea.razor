@using PurchaseBlazorApp2.Components.Data
@using PurchaseBlazorApp2.Components.Global

<label class="form-label">Approvals:</label>
@for (int i = 0; i < Approvals.Count; i++)
{
    var approval = Approvals[i];

    <div class="d-flex align-items-center gap-3 mb-2">
        <!-- Checkbox -->
        <InputCheckbox Value="approval.IsApproved"
        ValueChanged="@((bool val) => OnCheckboxChanged(val, approval))"
        ValueExpression="@(() => approval.IsApproved)"
        class="form-check-input"
        Disabled="!approval.CanApprove(GlobalVar.UserName.Role)" />

        <span>Department: @string.Join(", ", approval.Departments)</span>

        <div class="d-flex align-items-center gap-1">
            <label class="form-label mb-0">Approved by:</label>
            <span class="form-control-plaintext">@approval.UserName</span>
        </div>
    </div>
}

@code {
    [Parameter] public List<ApprovalInfo> Approvals{ get; set; } = new List<ApprovalInfo>();
    [Parameter] public GlobalVar MyGlobalVar { get; set; }
    [Parameter] public EventCallback<(bool NewValue, ApprovalInfo Approval)> OnApprovalChanged { get; set; }
    private async Task OnCheckboxChanged(bool newValue, ApprovalInfo approval)
    {
        approval.IsApproved = newValue;

        if (newValue)
        {
            approval.UserName = MyGlobalVar?.UserName.Name ?? "";

        }

        else
        {
            approval.UserName = "";

        }
        await OnApprovalChanged.InvokeAsync((newValue, approval));
        
    }
}
