@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components
@using PurchaseBlazorApp2.Components.Data
@using PurchaseBlazorApp2.Components.Global
@inject ClientGlobalVar GlobalVar
@inject IJSRuntime JS
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">PurchaseBlazorApp2</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (GlobalVar.UserName != null &&
        GlobalVar.UserName.Role == PurchaseBlazorApp2.Components.Data.EDepartment.Admin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> register
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="MainList_Client">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> MainList
            </NavLink>
        </div>
        @if (bIsProcurementManager)
        {
          
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="supplier-record">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Add Supplier
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="supplier/list">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Supplier List
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="purchaserequisitionrecords_client/create">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Create PR
            </NavLink>
        </div>

      

        <div class="nav-item px-3">
            <button class="btn btn-danger w-100" @onclick="Logout">
                <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Logout
            </button>
        </div>
    </nav>
</div>

@code {
    bool bIsProcurementManager { get; set; } =false;
    private CancellationTokenSource _cts = new();

    protected override async Task OnInitializedAsync()
    {
        // start background loop
        _ = CheckDepartmentLoopAsync(_cts.Token);
    }

    private async Task CheckDepartmentLoopAsync(CancellationToken token)
    {
        while (!token.IsCancellationRequested)
        {
            try
            {
                EDepartment MyDepartment = await GeneralLibrary.GetCurrentDepartmentRole(JS);
                bIsProcurementManager = (MyDepartment == EDepartment.ProcurementManager);

                // request UI update
                await InvokeAsync(StateHasChanged);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error checking department: {ex.Message}");
            }

            // wait before checking again (e.g. every 10 seconds)
            await Task.Delay(10000, token);
        }
    }

    private void Logout()
    {

        Navigation.NavigateTo("mainlogout");
    }
}